let e=document.createElement("style");e.innerHTML="",document.head.appendChild(e);import{v as t,i as r,aM as a,aL as n,aO as i,aa as o,aA as s,N as l,x as u,f as d,aP as v,ac as c,aQ as m,d as f,r as h,P as g,S as p,D as x,B as y,C as w,o as S,W as _,b as F,h as D,M as b,a as U}from"./index.f7c153f6.js";import{u as P,a as I}from"./index.22ce2b7e.js";import{a as C,C as T,F as j,S as M,P as E,E as O,R as Q}from"./PixelShader.c2dab674.js";var R={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new t(.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvec2 imageCoord = vUv;","\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","\t\timageCoord += uImageIncrement;","\t}","\tgl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){var t,r,a,n,i,o,s=2*Math.ceil(3*e)+1;for(s>25&&(s=25),n=.5*(s-1),r=new Array(s),a=0,t=0;t<s;++t)r[t]=(i=t-n,o=e,Math.exp(-i*i/(2*o*o))),a+=r[t];for(t=0;t<s;++t)r[t]/=a;return r}},N=function(e,t,l,u){C.call(this),e=void 0!==e?e:1,t=void 0!==t?t:25,l=void 0!==l?l:4,u=void 0!==u?u:256;var d={minFilter:o,magFilter:o,format:s};this.renderTargetX=new r(u,u,d),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new r(u,u,d),this.renderTargetY.texture.name="BloomPass.y",void 0===T&&console.error("BloomPass relies on CopyShader");var v=T;this.copyUniforms=a.clone(v.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new n({uniforms:this.copyUniforms,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,blending:i,transparent:!0}),void 0===R&&console.error("BloomPass relies on ConvolutionShader");var c=R;this.convolutionUniforms=a.clone(c.uniforms),this.convolutionUniforms.uImageIncrement.value=N.blurX,this.convolutionUniforms.cKernel.value=R.buildKernel(l),this.materialConvolution=new n({uniforms:this.convolutionUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:{KERNEL_SIZE_FLOAT:t.toFixed(1),KERNEL_SIZE_INT:t.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new C.FullScreenQuad(null)};N.prototype=Object.assign(Object.create(C.prototype),{constructor:N,render:function(e,t,r,a,n){n&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=r.texture,this.convolutionUniforms.uImageIncrement.value=N.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture,this.convolutionUniforms.uImageIncrement.value=N.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY.texture,n&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(r),this.clear&&e.clear(),this.fsQuad.render(e)}}),N.blurX=new t(.001953125,0),N.blurY=new t(0,.001953125);var K=function(e,t,r,i){C.call(this),void 0===j&&console.error("FilmPass relies on FilmShader");var o=j;this.uniforms=a.clone(o.uniforms),this.material=new n({uniforms:this.uniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),void 0!==i&&(this.uniforms.grayscale.value=i),void 0!==e&&(this.uniforms.nIntensity.value=e),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==r&&(this.uniforms.sCount.value=r),this.fsQuad=new C.FullScreenQuad(this.material)};K.prototype=Object.assign(Object.create(C.prototype),{constructor:K,render:function(e,t,r,a){this.uniforms.tDiffuse.value=r.texture,this.uniforms.time.value+=a,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e))}});var A={uniforms:{damp:{value:.96},tOld:{value:null},tNew:{value:null}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float damp;","uniform sampler2D tOld;","uniform sampler2D tNew;","varying vec2 vUv;","vec4 when_gt( vec4 x, float y ) {","\treturn max( sign( x - y ), 0.0 );","}","void main() {","\tvec4 texelOld = texture2D( tOld, vUv );","\tvec4 texelNew = texture2D( tNew, vUv );","\ttexelOld *= damp * when_gt( texelOld, 0.1 );","\tgl_FragColor = max(texelNew, texelOld);","}"].join("\n")},L=function(e){C.call(this),void 0===A&&console.error("AfterimagePass relies on AfterimageShader"),this.shader=A,this.uniforms=a.clone(this.shader.uniforms),this.uniforms.damp.value=void 0!==e?e:.96,this.textureComp=new r(window.innerWidth,window.innerHeight,{minFilter:o,magFilter:l,format:s}),this.textureOld=new r(window.innerWidth,window.innerHeight,{minFilter:o,magFilter:l,format:s}),this.shaderMaterial=new n({uniforms:this.uniforms,vertexShader:this.shader.vertexShader,fragmentShader:this.shader.fragmentShader}),this.compFsQuad=new C.FullScreenQuad(this.shaderMaterial);var t=new u;this.copyFsQuad=new C.FullScreenQuad(t)};L.prototype=Object.assign(Object.create(C.prototype),{constructor:L,render:function(e,t,r){this.uniforms.tOld.value=this.textureOld.texture,this.uniforms.tNew.value=r.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));var a=this.textureOld;this.textureOld=this.textureComp,this.textureComp=a},setSize:function(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}});var z={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","\tif(byp<1) {","\t\tvec2 p = vUv;","\t\tfloat xs = floor(gl_FragCoord.x / 0.5);","\t\tfloat ys = floor(gl_FragCoord.y / 0.5);","\t\tvec4 normal = texture2D (tDisp, p*seed*seed);","\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","\t\t\tif(seed_x>0.){","\t\t\t\tp.y = 1. - (p.y + distortion_y);","\t\t\t}","\t\t\telse {","\t\t\t\tp.y = distortion_y;","\t\t\t}","\t\t}","\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","\t\t\tif(seed_y>0.){","\t\t\t\tp.x=distortion_x;","\t\t\t}","\t\t\telse {","\t\t\t\tp.x = 1. - (p.x + distortion_x);","\t\t\t}","\t\t}","\t\tp.x+=normal.x*seed_x*(seed/5.);","\t\tp.y+=normal.y*seed_y*(seed/5.);","\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));","\t\tvec4 cr = texture2D(tDiffuse, p + offset);","\t\tvec4 cga = texture2D(tDiffuse, p);","\t\tvec4 cb = texture2D(tDiffuse, p - offset);","\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","\t\tgl_FragColor = gl_FragColor+ snow;","\t}","\telse {","\t\tgl_FragColor=texture2D (tDiffuse, vUv);","\t}","}"].join("\n")},X=function(e){C.call(this),void 0===z&&console.error("GlitchPass relies on DigitalGlitch");var t=z;this.uniforms=a.clone(t.uniforms),null==e&&(e=64),this.uniforms.tDisp.value=this.generateHeightmap(e),this.material=new n({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.fsQuad=new C.FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()};X.prototype=Object.assign(Object.create(C.prototype),{constructor:X,render:function(e,t,r){this.uniforms.tDiffuse.value=r.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=d.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=d.randFloat(-1,1),this.uniforms.seed_y.value=d.randFloat(-1,1),this.uniforms.distortion_x.value=d.randFloat(0,1),this.uniforms.distortion_y.value=d.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=d.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=d.randFloat(0,1),this.uniforms.distortion_y.value=d.randFloat(0,1),this.uniforms.seed_x.value=d.randFloat(-.3,.3),this.uniforms.seed_y.value=d.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e))},generateTrigger:function(){this.randX=d.randInt(120,240)},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),r=e*e,a=0;a<r;a++){var n=d.randFloat(0,1);t[3*a+0]=n,t[3*a+1]=n,t[3*a+2]=n}return new v(t,e,e,c,m)}});var W={uniforms:{tDiffuse:{value:null},amount:{value:.005},angle:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","\tvec2 offset = amount * vec2( cos(angle), sin(angle));","\tvec4 cr = texture2D(tDiffuse, vUv + offset);","\tvec4 cga = texture2D(tDiffuse, vUv);","\tvec4 cb = texture2D(tDiffuse, vUv - offset);","\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")},B={uniforms:{tDiffuse:{value:null},tSize:{value:new t(256,256)},center:{value:new t(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","\tfloat s = sin( angle ), c = cos( angle );","\tvec2 tex = vUv * tSize - center;","\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","\tvec4 color = texture2D( tDiffuse, vUv );","\tfloat average = ( color.r + color.g + color.b ) / 3.0;","\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")};let H=0;var Z=f({setup(){const e=h(null),r=new g(75,2,.1,5);r.position.z=2;const a=new p,n=new x;n.position.set(-1,2,4),a.add(n);const i=new y,o=(e,t)=>{const r=new b({color:e}),n=new U(i,r);return n.position.x=t,a.add(n),n},s=[o(4500104,0),o(8930474,-2),o(11176004,2)],l=new N(1,25,4,256);l.enabled=!1;const u=new K(.35,.025,648,!1),d=new L(.8);d.enabled=!1;const v=new X;v.enabled=!1;const c={uniforms:{tDiffuse:{value:null},color:{value:new w(8965375)}},vertexShader:"\r\n                varying vec2 vUv;\r\n                void main() {\r\n                    vUv = uv;\r\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\r\n                }\r\n            ",fragmentShader:"\r\n                uniform vec3 color;\r\n                uniform sampler2D tDiffuse;\r\n                varying vec2 vUv;\r\n                void main() {\r\n                    vec4 previousPassColor = texture2D(tDiffuse, vUv);\r\n                    gl_FragColor = vec4(\r\n                        previousPassColor.rgb * color,\r\n                        previousPassColor.a\r\n                    );\r\n                }\r\n            "},m=new M(c),f=new M(B);f.uniforms.scale.value=4,f.enabled=!1;const C=new M(W);C.uniforms.amount.value=.0015,C.enabled=!1;const T=new M(E);T.uniforms.resolution.value=new t(window.innerWidth,window.innerHeight),T.uniforms.resolution.value.multiplyScalar(window.devicePixelRatio),T.uniforms.pixelSize.value=16,T.enabled=!1;const j=P.create();{const e=j.addFolder("BloomPass");e.add(l,"enabled"),e.add(l.copyUniforms.opacity,"value",0,2).name("strength")}{const e=j.addFolder("FilmPass");e.add(u,"enabled"),e.add(u.uniforms.grayscale,"value").name("grayscale"),e.add(u.uniforms.nIntensity,"value",0,1).name("noise intensity"),e.add(u.uniforms.sIntensity,"value",0,1).name("scanline intensity"),e.add(u.uniforms.sCount,"value",0,1e3).name("scanline count"),e.open()}{const e=j.addFolder("ShaderPass");e.add(m,"enabled"),e.add(m.uniforms.color.value,"r",0,4).name("red"),e.add(m.uniforms.color.value,"g",0,4).name("green"),e.add(m.uniforms.color.value,"b",0,4).name("blue"),e.open()}{const e=j.addFolder("AfterImagePass");e.add(d,"enabled"),e.add(d.uniforms.damp,"value",0,1,.01).name("damp")}{const e=j.addFolder("GlitchPass");e.add(v,"enabled"),e.add(v,"goWild")}{const e=j.addFolder("DotScreenShader");e.add(f,"enabled"),e.add(f.uniforms.scale,"value",0,5,.01).name("scale")}{const e=j.addFolder("RGBShiftShader");e.add(C,"enabled"),e.add(C.uniforms.amount,"value",0,.01,1e-4).name("amount")}{const e=j.addFolder("PixelShader");e.add(T,"enabled"),e.add(T.uniforms.pixelSize,"value",0,32).name("pixelSize")}return S(()=>{const t=new _({canvas:e.value}),n=new O(t);n.addPass(new Q(a,r)),n.addPass(l),n.addPass(u),n.addPass(m),n.addPass(d),n.addPass(v),n.addPass(f),n.addPass(C),n.addPass(T);let i=0;const o=e=>{const a=(e*=.001)-i;if(i=e,I(t)){const e=t.domElement;r.aspect=e.clientWidth/e.clientHeight,r.updateProjectionMatrix(),n.setSize(e.width,e.height)}s.forEach((t,r)=>{const a=e*(1+.1*r);t.rotation.x=a,t.rotation.y=a}),n.render(a),H=requestAnimationFrame(o)};H=requestAnimationFrame(o)}),F(()=>{cancelAnimationFrame(H),P.dispose()}),()=>D("canvas",{ref:e,class:"canvas"})}});export default Z;
