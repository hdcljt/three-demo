(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-cb01143e"],{"121b":function(e,t,r){"use strict";r.r(t);r("4160"),r("b0c0"),r("159b");var i=r("5c40"),n=r("a1e9"),a=r("5a89"),s=r("32d9"),o=r("93e9"),l=r("1b53"),u=r("e9d2"),d={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{value:null},uImageIncrement:{value:new a["Pb"](.001953125,0)},cKernel:{value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","\tvec2 imageCoord = vUv;","\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","\t\timageCoord += uImageIncrement;","\t}","\tgl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){function t(e,t){return Math.exp(-e*e/(2*t*t))}var r,i,n,a,s=25,o=2*Math.ceil(3*e)+1;for(o>s&&(o=s),a=.5*(o-1),i=new Array(o),n=0,r=0;r<o;++r)i[r]=t(r-a,e),n+=i[r];for(r=0;r<o;++r)i[r]/=n;return i}},c=function(e,t,r,i){l["a"].call(this),e=void 0!==e?e:1,t=void 0!==t?t:25,r=void 0!==r?r:4,i=void 0!==i?i:256;var n={minFilter:a["P"],magFilter:a["P"],format:a["vb"]};this.renderTargetX=new a["Tb"](i,i,n),this.renderTargetX.texture.name="BloomPass.x",this.renderTargetY=new a["Tb"](i,i,n),this.renderTargetY.texture.name="BloomPass.y",void 0===u["a"]&&console.error("BloomPass relies on CopyShader");var s=u["a"];this.copyUniforms=a["Ob"].clone(s.uniforms),this.copyUniforms["opacity"].value=e,this.materialCopy=new a["Ab"]({uniforms:this.copyUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,blending:a["a"],transparent:!0}),void 0===d&&console.error("BloomPass relies on ConvolutionShader");var o=d;this.convolutionUniforms=a["Ob"].clone(o.uniforms),this.convolutionUniforms["uImageIncrement"].value=c.blurX,this.convolutionUniforms["cKernel"].value=d.buildKernel(r),this.materialConvolution=new a["Ab"]({uniforms:this.convolutionUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,defines:{KERNEL_SIZE_FLOAT:t.toFixed(1),KERNEL_SIZE_INT:t.toFixed(0)}}),this.needsSwap=!1,this.fsQuad=new l["a"].FullScreenQuad(null)};c.prototype=Object.assign(Object.create(l["a"].prototype),{constructor:c,render:function(e,t,r,i,n){n&&e.state.buffers.stencil.setTest(!1),this.fsQuad.material=this.materialConvolution,this.convolutionUniforms["tDiffuse"].value=r.texture,this.convolutionUniforms["uImageIncrement"].value=c.blurX,e.setRenderTarget(this.renderTargetX),e.clear(),this.fsQuad.render(e),this.convolutionUniforms["tDiffuse"].value=this.renderTargetX.texture,this.convolutionUniforms["uImageIncrement"].value=c.blurY,e.setRenderTarget(this.renderTargetY),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms["tDiffuse"].value=this.renderTargetY.texture,n&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(r),this.clear&&e.clear(),this.fsQuad.render(e)}}),c.blurX=new a["Pb"](.001953125,0),c.blurY=new a["Pb"](0,.001953125);var f=r("6337"),h=function(e,t,r,i){l["a"].call(this),void 0===f["a"]&&console.error("FilmPass relies on FilmShader");var n=f["a"];this.uniforms=a["Ob"].clone(n.uniforms),this.material=new a["Ab"]({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),void 0!==i&&(this.uniforms.grayscale.value=i),void 0!==e&&(this.uniforms.nIntensity.value=e),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==r&&(this.uniforms.sCount.value=r),this.fsQuad=new l["a"].FullScreenQuad(this.material)};h.prototype=Object.assign(Object.create(l["a"].prototype),{constructor:h,render:function(e,t,r,i){this.uniforms["tDiffuse"].value=r.texture,this.uniforms["time"].value+=i,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e))}});var v={uniforms:{damp:{value:.96},tOld:{value:null},tNew:{value:null}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float damp;","uniform sampler2D tOld;","uniform sampler2D tNew;","varying vec2 vUv;","vec4 when_gt( vec4 x, float y ) {","\treturn max( sign( x - y ), 0.0 );","}","void main() {","\tvec4 texelOld = texture2D( tOld, vUv );","\tvec4 texelNew = texture2D( tNew, vUv );","\ttexelOld *= damp * when_gt( texelOld, 0.1 );","\tgl_FragColor = max(texelNew, texelOld);","}"].join("\n")},m=function(e){l["a"].call(this),void 0===v&&console.error("AfterimagePass relies on AfterimageShader"),this.shader=v,this.uniforms=a["Ob"].clone(this.shader.uniforms),this.uniforms["damp"].value=void 0!==e?e:.96,this.textureComp=new a["Tb"](window.innerWidth,window.innerHeight,{minFilter:a["P"],magFilter:a["fb"],format:a["vb"]}),this.textureOld=new a["Tb"](window.innerWidth,window.innerHeight,{minFilter:a["P"],magFilter:a["fb"],format:a["vb"]}),this.shaderMaterial=new a["Ab"]({uniforms:this.uniforms,vertexShader:this.shader.vertexShader,fragmentShader:this.shader.fragmentShader}),this.compFsQuad=new l["a"].FullScreenQuad(this.shaderMaterial);var t=new a["ab"];this.copyFsQuad=new l["a"].FullScreenQuad(t)};m.prototype=Object.assign(Object.create(l["a"].prototype),{constructor:m,render:function(e,t,r){this.uniforms["tOld"].value=this.textureOld.texture,this.uniforms["tNew"].value=r.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));var i=this.textureOld;this.textureOld=this.textureComp,this.textureComp=i},setSize:function(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}});var g={uniforms:{tDiffuse:{value:null},tDisp:{value:null},byp:{value:0},amount:{value:.08},angle:{value:.02},seed:{value:.02},seed_x:{value:.02},seed_y:{value:.02},distortion_x:{value:.5},distortion_y:{value:.6},col_s:{value:.05}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","\tif(byp<1) {","\t\tvec2 p = vUv;","\t\tfloat xs = floor(gl_FragCoord.x / 0.5);","\t\tfloat ys = floor(gl_FragCoord.y / 0.5);","\t\tvec4 normal = texture2D (tDisp, p*seed*seed);","\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","\t\t\tif(seed_x>0.){","\t\t\t\tp.y = 1. - (p.y + distortion_y);","\t\t\t}","\t\t\telse {","\t\t\t\tp.y = distortion_y;","\t\t\t}","\t\t}","\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","\t\t\tif(seed_y>0.){","\t\t\t\tp.x=distortion_x;","\t\t\t}","\t\t\telse {","\t\t\t\tp.x = 1. - (p.x + distortion_x);","\t\t\t}","\t\t}","\t\tp.x+=normal.x*seed_x*(seed/5.);","\t\tp.y+=normal.y*seed_y*(seed/5.);","\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));","\t\tvec4 cr = texture2D(tDiffuse, p + offset);","\t\tvec4 cga = texture2D(tDiffuse, p);","\t\tvec4 cb = texture2D(tDiffuse, p - offset);","\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","\t\tgl_FragColor = gl_FragColor+ snow;","\t}","\telse {","\t\tgl_FragColor=texture2D (tDiffuse, vUv);","\t}","}"].join("\n")},p=function(e){l["a"].call(this),void 0===g&&console.error("GlitchPass relies on DigitalGlitch");var t=g;this.uniforms=a["Ob"].clone(t.uniforms),void 0==e&&(e=64),this.uniforms["tDisp"].value=this.generateHeightmap(e),this.material=new a["Ab"]({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.fsQuad=new l["a"].FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()};p.prototype=Object.assign(Object.create(l["a"].prototype),{constructor:p,render:function(e,t,r){this.uniforms["tDiffuse"].value=r.texture,this.uniforms["seed"].value=Math.random(),this.uniforms["byp"].value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms["amount"].value=Math.random()/30,this.uniforms["angle"].value=a["X"].randFloat(-Math.PI,Math.PI),this.uniforms["seed_x"].value=a["X"].randFloat(-1,1),this.uniforms["seed_y"].value=a["X"].randFloat(-1,1),this.uniforms["distortion_x"].value=a["X"].randFloat(0,1),this.uniforms["distortion_y"].value=a["X"].randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms["amount"].value=Math.random()/90,this.uniforms["angle"].value=a["X"].randFloat(-Math.PI,Math.PI),this.uniforms["distortion_x"].value=a["X"].randFloat(0,1),this.uniforms["distortion_y"].value=a["X"].randFloat(0,1),this.uniforms["seed_x"].value=a["X"].randFloat(-.3,.3),this.uniforms["seed_y"].value=a["X"].randFloat(-.3,.3)):0==this.goWild&&(this.uniforms["byp"].value=1),this.curF++,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.fsQuad.render(e))},generateTrigger:function(){this.randX=a["X"].randInt(120,240)},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),r=e*e,i=0;i<r;i++){var n=a["X"].randFloat(0,1);t[3*i+0]=n,t[3*i+1]=n,t[3*i+2]=n}return new a["q"](t,e,e,a["wb"],a["x"])}});var x=r("360d"),b={uniforms:{tDiffuse:{value:null},amount:{value:.005},angle:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","\tvec2 offset = amount * vec2( cos(angle), sin(angle));","\tvec4 cr = texture2D(tDiffuse, vUv + offset);","\tvec4 cga = texture2D(tDiffuse, vUv);","\tvec4 cb = texture2D(tDiffuse, vUv - offset);","\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")},y={uniforms:{tDiffuse:{value:null},tSize:{value:new a["Pb"](256,256)},center:{value:new a["Pb"](.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform vec2 center;","uniform float angle;","uniform float scale;","uniform vec2 tSize;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float pattern() {","\tfloat s = sin( angle ), c = cos( angle );","\tvec2 tex = vUv * tSize - center;","\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;","\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;","}","void main() {","\tvec4 color = texture2D( tDiffuse, vUv );","\tfloat average = ( color.r + color.g + color.b ) / 3.0;","\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );","}"].join("\n")},w=r("8018"),S=r("ed08"),_=0;t["default"]=Object(i["i"])({setup:function(){var e=Object(n["i"])(null),t=new a["mb"](75,2,.1,5);t.position.z=2;var r=new a["zb"],l=new a["r"];l.position.set(-1,2,4),r.add(l);var u=new a["h"],d=function(e,t){var i=new a["bb"]({color:e}),n=new a["Z"](u,i);return n.position.x=t,r.add(n),n},f=[d(4500104,0),d(8930474,-2),d(11176004,2)],v=new c(1,25,4,256);v.enabled=!1;var g=new h(.35,.025,648,!1),T=new m(.8);T.enabled=!1;var D=new p;D.enabled=!1;var F={uniforms:{tDiffuse:{value:null},color:{value:new a["o"](8965375)}},vertexShader:"\n                varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);\n                }\n            ",fragmentShader:"\n                uniform vec3 color;\n                uniform sampler2D tDiffuse;\n                varying vec2 vUv;\n                void main() {\n                    vec4 previousPassColor = texture2D(tDiffuse, vUv);\n                    gl_FragColor = vec4(\n                        previousPassColor.rgb * color,\n                        previousPassColor.a\n                    );\n                }\n            "},P=new x["a"](F),C=new x["a"](y);C.uniforms["scale"].value=4,C.enabled=!1;var E=new x["a"](b);E.uniforms["amount"].value=.0015,E.enabled=!1;var U=new x["a"](w["a"]);U.uniforms["resolution"].value=new a["Pb"](window.innerWidth,window.innerHeight),U.uniforms["resolution"].value.multiplyScalar(window.devicePixelRatio),U.uniforms["pixelSize"].value=16,U.enabled=!1;var R=S["r"].create(),j=R.addFolder("BloomPass");j.add(v,"enabled"),j.add(v.copyUniforms.opacity,"value",0,2).name("strength");var O=R.addFolder("FilmPass");O.add(g,"enabled"),O.add(g.uniforms.grayscale,"value").name("grayscale"),O.add(g.uniforms.nIntensity,"value",0,1).name("noise intensity"),O.add(g.uniforms.sIntensity,"value",0,1).name("scanline intensity"),O.add(g.uniforms.sCount,"value",0,1e3).name("scanline count"),O.open();var I=R.addFolder("ShaderPass");I.add(P,"enabled"),I.add(P.uniforms.color.value,"r",0,4).name("red"),I.add(P.uniforms.color.value,"g",0,4).name("green"),I.add(P.uniforms.color.value,"b",0,4).name("blue"),I.open();var M=R.addFolder("AfterImagePass");M.add(T,"enabled"),M.add(T.uniforms.damp,"value",0,1,.01).name("damp");var Q=R.addFolder("GlitchPass");Q.add(D,"enabled"),Q.add(D,"goWild");var A=R.addFolder("DotScreenShader");A.add(C,"enabled"),A.add(C.uniforms.scale,"value",0,5,.01).name("scale");var z=R.addFolder("RGBShiftShader");z.add(E,"enabled"),z.add(E.uniforms.amount,"value",0,.01,1e-4).name("amount");var L=R.addFolder("PixelShader");return L.add(U,"enabled"),L.add(U.uniforms.pixelSize,"value",0,32).name("pixelSize"),Object(i["n"])((function(){var i=new a["Ub"]({canvas:e.value}),n=new s["a"](i);n.addPass(new o["a"](r,t)),n.addPass(v),n.addPass(g),n.addPass(P),n.addPass(T),n.addPass(D),n.addPass(C),n.addPass(E),n.addPass(U);var l=0,u=function e(r){r*=.001;var a=r-l;if(l=r,Object(S["o"])(i)){var s=i.domElement;t.aspect=s.clientWidth/s.clientHeight,t.updateProjectionMatrix(),n.setSize(s.width,s.height)}f.forEach((function(e,t){var i=1+.1*t,n=r*i;e.rotation.x=n,e.rotation.y=n})),n.render(a),_=requestAnimationFrame(e)};_=requestAnimationFrame(u)})),Object(i["m"])((function(){cancelAnimationFrame(_),S["r"].dispose()})),function(){return Object(i["l"])("canvas",{ref:e,class:"canvas"})}}})},"159b":function(e,t,r){var i=r("da84"),n=r("fdbc"),a=r("17c2"),s=r("9112");for(var o in n){var l=i[o],u=l&&l.prototype;if(u&&u.forEach!==a)try{s(u,"forEach",a)}catch(d){u.forEach=a}}},"17c2":function(e,t,r){"use strict";var i=r("b727").forEach,n=r("a640"),a=r("ae40"),s=n("forEach"),o=a("forEach");e.exports=s&&o?[].forEach:function(e){return i(this,e,arguments.length>1?arguments[1]:void 0)}},"1b53":function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var i=r("5a89");function n(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}Object.assign(n.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),n.FullScreenQuad=function(){var e=new i["lb"](-1,1,1,-1,0,1),t=new i["nb"](2,2),r=function(e){this._mesh=new i["Z"](t,e)};return Object.defineProperty(r.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(r.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),r}()},"32d9":function(e,t,r){"use strict";r.d(t,"a",(function(){return u}));var i=r("5a89"),n=r("e9d2"),a=r("360d"),s=r("1b53"),o=function(e,t){s["a"].call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1};o.prototype=Object.assign(Object.create(s["a"].prototype),{constructor:o,render:function(e,t,r){var i,n,a=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0),this.inverse?(i=0,n=1):(i=1,n=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),s.buffers.stencil.setFunc(a.ALWAYS,i,4294967295),s.buffers.stencil.setClear(n),s.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(a.EQUAL,1,4294967295),s.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),s.buffers.stencil.setLocked(!0)}});var l=function(){s["a"].call(this),this.needsSwap=!1};l.prototype=Object.create(s["a"].prototype),Object.assign(l.prototype,{render:function(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}});var u=function(e,t){if(this.renderer=e,void 0===t){var r={minFilter:i["P"],magFilter:i["P"],format:i["vb"],stencilBuffer:!1},s=e.getSize(new i["Pb"]);this._pixelRatio=e.getPixelRatio(),this._width=s.width,this._height=s.height,t=new i["Tb"](this._width*this._pixelRatio,this._height*this._pixelRatio,r),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===n["a"]&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===a["a"]&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new a["a"](n["a"]),this.clock=new i["n"]};Object.assign(u.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},insertPass:function(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)},isLastEnabledPass:function(e){for(var t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0},render:function(e){void 0===e&&(e=this.clock.getDelta());var t,r,i=this.renderer.getRenderTarget(),n=!1,a=this.passes.length;for(r=0;r<a;r++)if(t=this.passes[r],!1!==t.enabled){if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),t.needsSwap){if(n){var s=this.renderer.getContext(),u=this.renderer.state.buffers.stencil;u.setFunc(s.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),u.setFunc(s.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==o&&(t instanceof o?n=!0:t instanceof l&&(n=!1))}this.renderer.setRenderTarget(i)},reset:function(e){if(void 0===e){var t=this.renderer.getSize(new i["Pb"]);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this._width=e,this._height=t;var r=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(r,i),this.renderTarget2.setSize(r,i);for(var n=0;n<this.passes.length;n++)this.passes[n].setSize(r,i)},setPixelRatio:function(e){this._pixelRatio=e,this.setSize(this._width,this._height)}});var d=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1};Object.assign(d.prototype,{setSize:function(){},render:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),d.FullScreenQuad=function(){var e=new i["lb"](-1,1,1,-1,0,1),t=new i["nb"](2,2),r=function(e){this._mesh=new i["Z"](t,e)};return Object.defineProperty(r.prototype,"material",{get:function(){return this._mesh.material},set:function(e){this._mesh.material=e}}),Object.assign(r.prototype,{dispose:function(){this._mesh.geometry.dispose()},render:function(t){t.render(this._mesh,e)}}),r}()},"360d":function(e,t,r){"use strict";r.d(t,"a",(function(){return a}));var i=r("5a89"),n=r("1b53"),a=function(e,t){n["a"].call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof i["Ab"]?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=i["Ob"].clone(e.uniforms),this.material=new i["Ab"]({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new n["a"].FullScreenQuad(this.material)};a.prototype=Object.assign(Object.create(n["a"].prototype),{constructor:a,render:function(e,t,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}})},4160:function(e,t,r){"use strict";var i=r("23e7"),n=r("17c2");i({target:"Array",proto:!0,forced:[].forEach!=n},{forEach:n})},6337:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var i={uniforms:{tDiffuse:{value:null},time:{value:0},nIntensity:{value:.5},sIntensity:{value:.05},sCount:{value:4096},grayscale:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );","\tfloat dx = rand( vUv + time );","\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","\tif( grayscale ) {","\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","\t}","\tgl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")}},8018:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var i={uniforms:{tDiffuse:{value:null},resolution:{value:null},pixelSize:{value:1}},vertexShader:["varying highp vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float pixelSize;","uniform vec2 resolution;","varying highp vec2 vUv;","void main(){","vec2 dxy = pixelSize / resolution;","vec2 coord = dxy * floor( vUv / dxy );","gl_FragColor = texture2D(tDiffuse, coord);","}"].join("\n")}},"93e9":function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var i=r("1b53"),n=function(e,t,r,n,a){i["a"].call(this),this.scene=e,this.camera=t,this.overrideMaterial=r,this.clearColor=n,this.clearAlpha=void 0!==a?a:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1};n.prototype=Object.assign(Object.create(i["a"].prototype),{constructor:n,render:function(e,t,r){var i,n,a,s=e.autoClear;e.autoClear=!1,void 0!==this.overrideMaterial&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(i=e.getClearColor().getHex(),n=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(i,n),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=a),e.autoClear=s}})},b0c0:function(e,t,r){var i=r("83ab"),n=r("9bf2").f,a=Function.prototype,s=a.toString,o=/^\s*function ([^ (]*)/,l="name";i&&!(l in a)&&n(a,l,{configurable:!0,get:function(){try{return s.call(this).match(o)[1]}catch(e){return""}}})},e9d2:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var i={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tgl_FragColor = opacity * texel;","}"].join("\n")}}}]);