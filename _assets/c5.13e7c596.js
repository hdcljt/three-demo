let e=document.createElement("style");e.innerHTML=".split_8c9b1b2a{position:absolute;top:12px;left:12px;width:calc(100% - 24px);height:calc(100% - 24px);display:flex}.split_8c9b1b2a>div{flex:1}.split_8c9b1b2a>div:focus{outline:red auto 3px}",document.head.appendChild(e);import{d as a,r as n,o,S as t,A as s,B as d,M as i,a as r,j as c,D as p,P as l,J as m,K as v,W as g,C as h,b as u,h as C}from"./index.f7c153f6.js";import{u as f,m as b,b as w,a as x,s as y,M as F}from"./index.22ce2b7e.js";import{O as P}from"./OrbitControls.7a42b37a.js";var j="split_8c9b1b2a";const z=(e,a,n,o)=>{const t=e.addFolder(n);t.add(a,"x",0,10).onChange(o),t.add(a,"y",0,20).onChange(o),t.add(a,"z",0,30).onChange(o),t.open()};var B=a({setup(){const e=n(null),a=n(null),B=n(null),M=f.create();return o(()=>{const n=new t,o=new s(2);o.position.set(0,4,0),n.add(o),b().then(e=>{n.add(e),w(L)});const u=M.addFolder("BufferGeometry");{const e=4,a=new d(e,e,e),o=new i({color:"#8AC"}),t=new r(a,o);t.position.set(e+1,e/2,0),n.add(t);const s=u.addFolder("BoxBufferGeometry");s.open(),s.add(t.position,"x",0,e+1,.01).name("x").onChange(()=>w(L)),s.add(t.position,"y",0,e/2,.01).name("y").onChange(()=>w(L)),s.add(t.position,"z",-e,0,.01).name("z").onChange(()=>w(L))}{const e=3,a=new c(e,32,16),o=new i({color:"#CA8"}),t=new r(a,o);t.position.set(-e-1,e+2,0),n.add(t);const s=u.addFolder("SphereBufferGeometry");s.open(),s.add(t.position,"x",-e-1,0,.01).name("x").onChange(()=>w(L)),s.add(t.position,"y",0,e+2,.01).name("y").onChange(()=>w(L)),s.add(t.position,"z",0,2*e,.01).name("z").onChange(()=>w(L))}{const e=new p(16777215,1);e.position.set(0,10,0),e.target.position.set(-5,0,0),n.add(e),n.add(e.target)}const C=new l(45,2,5,50);C.position.set(0,10,20);const f=new m(C);f.visible=!1,n.add(f);const j=new v(-1,1,1,-1,5,50);j.zoom=.2,j.position.set(0,10,20);const A=new m(j);A.visible=!1,n.add(A);let O=C,_=f,k=new P(O,a.value);k.target.set(0,5,0),k.enableDamping=!0;{const e=M.add({camera:"Perspective"},"camera",["Perspective","Orthographic"]);let a=M.addFolder("PerspectiveCamera");const n=new F(C,"near","far",.1),o=new F(j,"near","far",.1);let t;a.open(),a.add(C,"fov",1,180).onChange(()=>w(L)),a.add(n,"min",.1,50,.1).name("near").onChange(()=>w(L)),a.add(n,"max",.1,50,.1).name("far").onChange(()=>w(L)),z(a,C.position,"position",()=>w(L)),e.onChange(e=>{"Perspective"===e?(A.visible=!1,O=C,_=f,M.removeFolder(t),a=M.addFolder("PerspectiveCamera"),a.open(),a.add(C,"fov",1,180).onChange(()=>w(L)),a.add(n,"min",.1,50,.1).name("near").onChange(()=>w(L)),a.add(n,"max",.1,50,.1).name("far").onChange(()=>w(L)),z(a,C.position,"position",()=>w(L))):(f.visible=!1,O=j,_=A,M.removeFolder(a),t=M.addFolder("OrthographicCamera"),t.open(),t.add(j,"zoom",.01,1,.01).listen().onChange(()=>w(L)),t.add(o,"min",.1,50,.1).name("near").onChange(()=>w(L)),t.add(o,"max",.1,50,.1).name("far").onChange(()=>w(L)),z(t,j.position,"position",()=>w(L))),k.object=O,w(L)})}const D=new l(60,2,.1,500);D.position.set(40,10,30),D.lookAt(0,5,0);const E=new P(D,B.value);E.target.set(0,5,0),E.enableDamping=!0;const G=new g({canvas:e.value});G.setClearColor("blue"),G.setScissorTest(!0);const L=()=>{x(G),k.update(),E.update();{const o=y(a.value,e.value,G);O===C?O.aspect=o:(O.left=-o,O.right=o),O.updateProjectionMatrix(),_.update(),_.visible=!1,n.background=new h(0),G.render(n,O)}{const a=y(B.value,e.value,G);D.aspect=a,D.updateProjectionMatrix(),_.visible=!0,n.background=new h(64),G.render(n,D)}};w(L),k.addEventListener("change",()=>w(L)),E.addEventListener("change",()=>w(L))}),u(()=>{f.dispose()}),()=>[C("canvas",{ref:e,class:"canvas"}),C("div",{class:j},[C("div",{ref:a}),C("div",{ref:B})])]}});export default B;
